name: Build Continer Image and Deploy Application to EKS

on:
  workflow_dispatch:
  push:
    paths:
      - 'application/**'
    branches:
      - main

jobs:
  app-build-and-deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    environment: Prod

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      ECR_REPO_NAME: githubactionsoidcstack-sampleapprepod40c970d-lkhwlwklf0xw
      CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}
      DEPLOYMENT_NAME: sample-app
      CONTAINER_NAME: sample-app
      K8S_NAMESPACE: default

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/GitHubActionsOidcAccessRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./application
          file: ./application/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}
          secrets: |
            "candidate=${{ github.actor }}"

      #- name: Build and push Docker image
      #  run: |
      #    cd application
      #    docker build --platform linux/amd64 -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }} .
          
      #- name: Push Docker image to ECR
      #  run: |
      #    docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
            ${{ env.CONTAINER_NAME }}=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }} \
            -n ${{ env.K8S_NAMESPACE }}
